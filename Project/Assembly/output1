succeeded parsing input.
ROOT 
  FUNC DECL 
    FUNC HEADER 
      TYPE VOID
      ID relax
    FUNC PARAMS 
      PARAMETER 
        STORAGE NORMAL
        TYPE INT
        ID u
      PARAMETER 
        STORAGE NORMAL
        TYPE INT
        ID v
      PARAMETER 
        STORAGE NORMAL
        TYPE DOUBLE
        ID w
      PARAMETER 
        STORAGE NORMAL
        TYPE DOUBLE ARRAY
        ID d
      PARAMETER 
        STORAGE NORMAL
        TYPE INT ARRAY
        ID pi
    COMPOUND STATEMENT 
      LOCAL DECL 
        EMPTY 
      STATEMENT LIST 
        EMPTY 
        IF 
          > 
            ID v
            + 
              ID u
              ID w
          COMPOUND STATEMENT 
            LOCAL DECL 
              EMPTY 
            STATEMENT LIST 
              EMPTY 
              = 
                ID v
                + 
                  ID u
                  ID w
              = 
                ID v
                ID u
  FUNC DECL 
    FUNC HEADER 
      TYPE VOID
      ID initialize_single_source
    FUNC PARAMS 
      PARAMETER 
        STORAGE NORMAL
        TYPE DOUBLE ARRAY
        ID d
      PARAMETER 
        STORAGE NORMAL
        TYPE INT ARRAY
        ID pi
      PARAMETER 
        STORAGE NORMAL
        TYPE INT
        ID s
      PARAMETER 
        STORAGE NORMAL
        TYPE INT
        ID n
    COMPOUND STATEMENT 
      LOCAL DECL 
        EMPTY 
        VAR DECL 
          STORAGE NORMAL
          TYPE INT
          ID i
      STATEMENT LIST 
        EMPTY 
        FOR 
          = 
            ID i
            INTLIT 1
          <= 
            ID i
            ID n
          COMPOUND STATEMENT 
            LOCAL DECL 
              EMPTY 
            STATEMENT LIST 
              EMPTY 
              = 
                ID i
                DOUBLELIT 1000000000.000000
              = 
                ID i
                INTLIT 0
          ++PRE 
            ID i
        = 
          ID s
          DOUBLELIT 0.000000
  FUNC DECL 
    FUNC HEADER 
      TYPE INT
      ID bellman_ford
    FUNC PARAMS 
      PARAMETER 
        STORAGE NORMAL
        TYPE INT ARRAY
        ID first
      PARAMETER 
        STORAGE NORMAL
        TYPE INT ARRAY
        ID node
      PARAMETER 
        STORAGE NORMAL
        TYPE INT ARRAY
        ID next
      PARAMETER 
        STORAGE NORMAL
        TYPE DOUBLE ARRAY
        ID w
      PARAMETER 
        STORAGE NORMAL
        TYPE DOUBLE ARRAY
        ID d
      PARAMETER 
        STORAGE NORMAL
        TYPE INT ARRAY
        ID pi
      PARAMETER 
        STORAGE NORMAL
        TYPE INT
        ID s
      PARAMETER 
        STORAGE NORMAL
        TYPE INT
        ID n
    COMPOUND STATEMENT 
      LOCAL DECL 
        EMPTY 
        VAR DECL 
          STORAGE NORMAL
          TYPE INT
          ID u
        VAR DECL 
          STORAGE NORMAL
          TYPE INT
          ID v
        VAR DECL 
          STORAGE NORMAL
          TYPE INT
          ID i
        VAR DECL 
          STORAGE NORMAL
          TYPE INT
          ID j
      STATEMENT LIST 
        EMPTY 
        CALL 
          ID n
          ARGUMENTS 
            ID d
            ID pi
            ID s
            ID n
        FOR 
          = 
            ID i
            INTLIT 1
          <= 
            ID i
            - 
              ID n
              INTLIT 1
          COMPOUND STATEMENT 
            LOCAL DECL 
              EMPTY 
            STATEMENT LIST 
              EMPTY 
              FOR 
                = 
                  ID u
                  INTLIT 1
                <= 
                  ID u
                  ID n
                COMPOUND STATEMENT 
                  LOCAL DECL 
                    EMPTY 
                  STATEMENT LIST 
                    EMPTY 
                    = 
                      ID j
                      ID u
                      ID u
                    WHILE 
                      > 
                        ID j
                        INTLIT 0
                      COMPOUND STATEMENT 
                        LOCAL DECL 
                          EMPTY 
                        STATEMENT LIST 
                          EMPTY 
                          = 
                            ID v
                            ID j
                            ID j
                          CALL 
                            ID pi
                            ARGUMENTS 
                              ID u
                              ID v
                              ID j
                              ID j
                              ID d
                              ID pi
                          = 
                            ID j
                            ID j
                            ID j
                ++PRE 
                  ID u
          ++PRE 
            ID i
        FOR 
          = 
            ID u
            INTLIT 1
          <= 
            ID u
            ID n
          COMPOUND STATEMENT 
            LOCAL DECL 
              EMPTY 
            STATEMENT LIST 
              EMPTY 
              = 
                ID j
                ID u
                ID u
              WHILE 
                > 
                  ID j
                  INTLIT 0
                COMPOUND STATEMENT 
                  LOCAL DECL 
                    EMPTY 
                  STATEMENT LIST 
                    EMPTY 
                    = 
                      ID v
                      ID j
                      ID j
                    IF 
                      > 
                        ID v
                        + 
                          ID u
                          ID j
                          ID j
                      RETURN 
                        INTLIT 0
                    = 
                      ID j
                      ID j
                      ID j
          ++PRE 
            ID u
        RETURN 
          INTLIT 1
  FUNC DECL 
    FUNC HEADER 
      TYPE VOID
      ID main
    FUNC PARAMS 
      TYPE VOID
    COMPOUND STATEMENT 
      LOCAL DECL 
        EMPTY 
        VAR DECL 
          STORAGE NORMAL
          TYPE INT ARRAY
          ID first
          INTLIT 6
        VAR DECL 
          STORAGE NORMAL
          TYPE INT ARRAY
          ID node
          INTLIT 11
        VAR DECL 
          STORAGE NORMAL
          TYPE INT ARRAY
          ID next
          INTLIT 11
        VAR DECL 
          STORAGE NORMAL
          TYPE INT ARRAY
          ID pi
          INTLIT 6
        VAR DECL 
          STORAGE NORMAL
          TYPE DOUBLE ARRAY
          ID w
          INTLIT 11
        VAR DECL 
          STORAGE NORMAL
          TYPE DOUBLE ARRAY
          ID d
          INTLIT 6
        VAR DECL 
          STORAGE NORMAL
          TYPE INT
          ID s
        VAR DECL 
          STORAGE NORMAL
          TYPE INT
          ID i
        VAR DECL 
          STORAGE NORMAL
          TYPE INT
          ID ok
      STATEMENT LIST 
        EMPTY 
        = 
          ID first
          INTLIT 1
        = 
          ID first
          INTLIT 3
        = 
          ID first
          INTLIT 6
        = 
          ID first
          INTLIT 7
        = 
          ID first
          INTLIT 9
        = 
          ID node
          INTLIT 2
        = 
          ID node
          INTLIT 4
        = 
          ID node
          INTLIT 3
        = 
          ID node
          INTLIT 4
        = 
          ID node
          INTLIT 5
        = 
          ID node
          INTLIT 2
        = 
          ID node
          INTLIT 3
        = 
          ID node
          INTLIT 5
        = 
          ID node
          INTLIT 1
        = 
          ID node
          INTLIT 3
        = 
          ID w
          DOUBLELIT 6.000000
        = 
          ID w
          DOUBLELIT 7.000000
        = 
          ID w
          DOUBLELIT 5.000000
        = 
          ID w
          DOUBLELIT 8.000000
        = 
          ID w
          - 
            DOUBLELIT 4.000000
        = 
          ID w
          - 
            DOUBLELIT 2.000000
        = 
          ID w
          - 
            DOUBLELIT 3.000000
        = 
          ID w
          DOUBLELIT 9.000000
        = 
          ID w
          DOUBLELIT 2.000000
        = 
          ID w
          DOUBLELIT 7.000000
        = 
          ID next
          INTLIT 2
        = 
          ID next
          INTLIT 0
        = 
          ID next
          INTLIT 4
        = 
          ID next
          INTLIT 5
        = 
          ID next
          INTLIT 0
        = 
          ID next
          INTLIT 0
        = 
          ID next
          INTLIT 8
        = 
          ID next
          INTLIT 0
        = 
          ID next
          INTLIT 10
        = 
          ID next
          INTLIT 0
        PRINT 
          STRINGLIT Enter source node: 
        READ 
          ID s
        = 
          ID ok
          CALL 
            ID s
            ARGUMENTS 
              ID first
              ID node
              ID next
              ID w
              ID d
              ID pi
              ID s
              INTLIT 5
        PRINT 
          STRINGLIT bellman_ford returns 
        PRINT 
          ID ok
        PRINT 
          STRINGLIT \n\n
        FOR 
          = 
            ID i
            INTLIT 1
          <= 
            ID i
            INTLIT 5
          COMPOUND STATEMENT 
            LOCAL DECL 
              EMPTY 
            STATEMENT LIST 
              EMPTY 
              PRINT 
                ID i
              PRINT 
                STRINGLIT : 
              PRINT 
                ID i
                ID i
              PRINT 
                STRINGLIT   
              PRINT 
                ID i
                ID i
              PRINT 
                STRINGLIT \n
          ++PRE 
            ID i
