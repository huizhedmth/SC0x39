succeeded parsing input.
ROOT 
  FUNC_DECL 
    FUNC_HEADER parent
      PARAM 
        TYPE int
        ID i
    CMPD_STMT 
      RTN_STMT 
        / 
          ID i
          INTLIT 2
  FUNC_DECL 
    FUNC_HEADER left
      PARAM 
        TYPE int
        ID i
    CMPD_STMT 
      RTN_STMT 
        * 
          INTLIT 2
          ID i
  FUNC_DECL 
    FUNC_HEADER right
      PARAM 
        TYPE int
        ID i
    CMPD_STMT 
      RTN_STMT 
        + 
          * 
            INTLIT 2
            ID i
          INTLIT 1
  FUNC_DECL 
    FUNC_HEADER exchange
      PARAM 
        TYPE double
        ID key[]
      PARAM 
        TYPE int
        ID handle[]
      PARAM 
        TYPE int
        ID heap_index[]
      PARAM 
        TYPE int
        ID i
      PARAM 
        TYPE int
        ID j
    CMPD_STMT 
      LOCAL_DECL 
        VAR_DECL 
          TYPE double
          ID key_temp
        VAR_DECL 
          TYPE int
          ID handle_temp
      = 
        ID key_temp
        ID key[]
          ID i
      = 
        ID key[]
          ID i
        ID key[]
          ID j
      = 
        ID key[]
          ID j
        ID key_temp
      = 
        ID handle_temp
        ID handle[]
          ID i
      = 
        ID handle[]
          ID i
        ID handle[]
          ID j
      = 
        ID handle[]
          ID j
        ID handle_temp
      = 
        ID heap_index[]
          ID handle[]
            ID i
        ID i
      = 
        ID heap_index[]
          ID handle[]
            ID j
        ID j
  FUNC_DECL 
    FUNC_HEADER heapify
      PARAM 
        TYPE double
        ID key[]
      PARAM 
        TYPE int
        ID handle[]
      PARAM 
        TYPE int
        ID heap_index[]
      PARAM 
        TYPE int
        ID i
      PARAM 
        TYPE int
        ID size
    CMPD_STMT 
      LOCAL_DECL 
        VAR_DECL 
          TYPE int
          ID l
            CALL i
              ID i
        VAR_DECL 
          TYPE int
          ID r
            CALL i
              ID i
        VAR_DECL 
          TYPE int
          ID smallest
      IFELSE 
        && 
          <= 
            ID l
            ID size
          < 
            ID key[]
              ID l
            ID key[]
              ID i
        = 
          ID smallest
          ID l
        = 
          ID smallest
          ID i
      IF 
        && 
          <= 
            ID r
            ID size
          < 
            ID key[]
              ID r
            ID key[]
              ID smallest
        = 
          ID smallest
          ID r
      IF 
        != 
          ID smallest
          ID i
        CMPD_STMT 
          CALL smallest
            ID key
            ID handle
            ID heap_index
            ID i
            ID smallest
          CALL size
            ID key
            ID handle
            ID heap_index
            ID smallest
            ID size
  FUNC_DECL 
    FUNC_HEADER build_heap
      PARAM 
        TYPE double
        ID key[]
      PARAM 
        TYPE int
        ID handle[]
      PARAM 
        TYPE int
        ID heap_index[]
      PARAM 
        TYPE int
        ID size
    CMPD_STMT 
      LOCAL_DECL 
        VAR_DECL 
          TYPE int
          ID i
      FOR_STMT 
        = 
          ID i
          / 
            ID size
            INTLIT 2
        >= 
          ID i
          INTLIT 1
        --(pre) 
          ID i
        CALL size
          ID key
          ID handle
          ID heap_index
          ID i
          ID size
  FUNC_DECL 
    FUNC_HEADER extract_min
      PARAM 
        TYPE double
        ID key[]
      PARAM 
        TYPE int
        ID handle[]
      PARAM 
        TYPE int
        ID heap_index[]
      PARAM 
        TYPE int
        ID size
    CMPD_STMT 
      CALL size
        ID key
        ID handle
        ID heap_index
        INTLIT 1
        ID size
      CALL size
        ID key
        ID handle
        ID heap_index
        INTLIT 1
        - 
          ID size
          INTLIT 1
  FUNC_DECL 
    FUNC_HEADER decrease_key
      PARAM 
        TYPE double
        ID key[]
      PARAM 
        TYPE int
        ID handle[]
      PARAM 
        TYPE int
        ID heap_index[]
      PARAM 
        TYPE int
        ID i
      PARAM 
        TYPE int
        ID size
      PARAM 
        TYPE double
        ID new_key
    CMPD_STMT 
      = 
        ID key[]
          ID i
        ID new_key
      WHILE_STMT	 
        && 
          > 
            ID i
            INTLIT 1
          > 
            ID key[]
              CALL i
                ID i
            ID key[]
              ID i
        CMPD_STMT 
          CALL i
            ID key
            ID handle
            ID heap_index
            ID i
            CALL i
              ID i
          = 
            ID i
            CALL i
              ID i
  FUNC_DECL 
    FUNC_HEADER insert
      PARAM 
        TYPE double
        ID key[]
      PARAM 
        TYPE int
        ID handle[]
      PARAM 
        TYPE int
        ID heap_index[]
      PARAM 
        TYPE int
        ID vertex
      PARAM 
        TYPE int
        ID size
      PARAM 
        TYPE double
        ID new_key
    CMPD_STMT 
      = 
        ID key[]
          ++(pre) 
            ID size
        DOUBLELIT 1000000000.000000
      = 
        ID handle[]
          ID size
        ID vertex
      = 
        ID heap_index[]
          ID vertex
        ID size
      CALL new_key
        ID key
        ID handle
        ID heap_index
        ID size
        ID size
        ID new_key
  FUNC_DECL 
    FUNC_HEADER relax
      PARAM 
        TYPE int
        ID u
      PARAM 
        TYPE int
        ID v
      PARAM 
        TYPE double
        ID w
      PARAM 
        TYPE double
        ID key[]
      PARAM 
        TYPE int
        ID handle[]
      PARAM 
        TYPE int
        ID heap_index[]
      PARAM 
        TYPE int
        ID size
      PARAM 
        TYPE int
        ID pi[]
    CMPD_STMT 
      IF 
        > 
          ID key[]
            ID heap_index[]
              ID v
          + 
            ID key[]
              ID heap_index[]
                ID u
            ID w
        CMPD_STMT 
          CALL w
            ID key
            ID handle
            ID heap_index
            ID heap_index[]
              ID v
            ID size
            + 
              ID key[]
                ID heap_index[]
                  ID u
              ID w
          = 
            ID pi[]
              ID v
            ID u
  FUNC_DECL 
    FUNC_HEADER initialize_single_source
      PARAM 
        TYPE double
        ID key[]
      PARAM 
        TYPE int
        ID handle[]
      PARAM 
        TYPE int
        ID heap_index[]
      PARAM 
        TYPE int
        ID pi[]
      PARAM 
        TYPE int
        ID s
      PARAM 
        TYPE int
        ID n
    CMPD_STMT 
      LOCAL_DECL 
        VAR_DECL 
          TYPE int
          ID i
      FOR_STMT 
        = 
          ID i
          INTLIT 1
        <= 
          ID i
          ID n
        ++(pre) 
          ID i
        CMPD_STMT 
          = 
            ID key[]
              ID i
            DOUBLELIT 1000000000.000000
          = 
            ID handle[]
              ID i
            ID i
          = 
            ID heap_index[]
              ID i
            ID i
          = 
            ID pi[]
              ID i
            INTLIT 0
      = 
        ID key[]
          ID s
        DOUBLELIT 0.000000
      CALL n
        ID key
        ID handle
        ID heap_index
        ID n
  FUNC_DECL 
    FUNC_HEADER dijkstra
      PARAM 
        TYPE int
        ID first[]
      PARAM 
        TYPE int
        ID node[]
      PARAM 
        TYPE int
        ID next[]
      PARAM 
        TYPE double
        ID w[]
      PARAM 
        TYPE double
        ID d[]
      PARAM 
        TYPE int
        ID pi[]
      PARAM 
        TYPE int
        ID s
      PARAM 
        TYPE int
        ID n
      PARAM 
        TYPE int
        ID handle[]
      PARAM 
        TYPE int
        ID heap_index[]
    CMPD_STMT 
      LOCAL_DECL 
        VAR_DECL 
          TYPE int
          ID size
            ID n
        VAR_DECL 
          TYPE int
          ID u
          ID v
          ID i
      CALL n
        ID d
        ID handle
        ID heap_index
        ID pi
        ID s
        ID n
      WHILE_STMT	 
        > 
          ID size
          INTLIT 0
        CMPD_STMT 
          = 
            ID u
            ID handle[]
              INTLIT 1
          CALL size
            ID d
            ID handle
            ID heap_index
            ID size
          --(pre) 
            ID size
          = 
            ID i
            ID first[]
              ID u
          WHILE_STMT	 
            > 
              ID i
              INTLIT 0
            CMPD_STMT 
              = 
                ID v
                ID node[]
                  ID i
              CALL pi
                ID u
                ID v
                ID w[]
                  ID i
                ID d
                ID handle
                ID heap_index
                ID size
                ID pi
              = 
                ID i
                ID next[]
                  ID i
  FUNC_DECL 
    FUNC_HEADER main
    CMPD_STMT 
      LOCAL_DECL 
        VAR_DECL 
          TYPE int
          ID first[]
            INTLIT 6
          ID node[]
            INTLIT 11
          ID next[]
            INTLIT 11
          ID pi[]
            INTLIT 6
          ID handle[]
            INTLIT 6
          ID heap_index[]
            INTLIT 6
        VAR_DECL 
          TYPE double
          ID w[]
            INTLIT 11
          ID d[]
            INTLIT 6
        VAR_DECL 
          TYPE int
          ID s
        VAR_DECL 
          TYPE int
          ID i
      = 
        ID first[]
          INTLIT 1
        INTLIT 1
      = 
        ID first[]
          INTLIT 2
        INTLIT 3
      = 
        ID first[]
          INTLIT 3
        INTLIT 5
      = 
        ID first[]
          INTLIT 4
        INTLIT 6
      = 
        ID first[]
          INTLIT 5
        INTLIT 9
      = 
        ID node[]
          INTLIT 1
        INTLIT 2
      = 
        ID node[]
          INTLIT 2
        INTLIT 4
      = 
        ID node[]
          INTLIT 3
        INTLIT 3
      = 
        ID node[]
          INTLIT 4
        INTLIT 4
      = 
        ID node[]
          INTLIT 5
        INTLIT 5
      = 
        ID node[]
          INTLIT 6
        INTLIT 2
      = 
        ID node[]
          INTLIT 7
        INTLIT 3
      = 
        ID node[]
          INTLIT 8
        INTLIT 5
      = 
        ID node[]
          INTLIT 9
        INTLIT 1
      = 
        ID node[]
          INTLIT 10
        INTLIT 3
      = 
        ID w[]
          INTLIT 1
        DOUBLELIT 10.000000
      = 
        ID w[]
          INTLIT 2
        DOUBLELIT 5.000000
      = 
        ID w[]
          INTLIT 3
        DOUBLELIT 1.000000
      = 
        ID w[]
          INTLIT 4
        DOUBLELIT 2.000000
      = 
        ID w[]
          INTLIT 5
        DOUBLELIT 4.000000
      = 
        ID w[]
          INTLIT 6
        DOUBLELIT 3.000000
      = 
        ID w[]
          INTLIT 7
        DOUBLELIT 9.000000
      = 
        ID w[]
          INTLIT 8
        DOUBLELIT 2.000000
      = 
        ID w[]
          INTLIT 9
        DOUBLELIT 7.000000
      = 
        ID w[]
          INTLIT 10
        DOUBLELIT 6.000000
      = 
        ID next[]
          INTLIT 1
        INTLIT 2
      = 
        ID next[]
          INTLIT 2
        INTLIT 0
      = 
        ID next[]
          INTLIT 3
        INTLIT 4
      = 
        ID next[]
          INTLIT 4
        INTLIT 0
      = 
        ID next[]
          INTLIT 5
        INTLIT 0
      = 
        ID next[]
          INTLIT 6
        INTLIT 7
      = 
        ID next[]
          INTLIT 7
        INTLIT 8
      = 
        ID next[]
          INTLIT 8
        INTLIT 0
      = 
        ID next[]
          INTLIT 9
        INTLIT 10
      = 
        ID next[]
          INTLIT 10
        INTLIT 0
      PRINT_STMT 
        STRINGIT Enter source node: 
      READ_STMT 
        ID s
      CALL heap_index
        ID first
        ID node
        ID next
        ID w
        ID d
        ID pi
        ID s
        INTLIT 5
        ID handle
        ID heap_index
      FOR_STMT 
        = 
          ID i
          INTLIT 1
        <= 
          ID i
          INTLIT 5
        ++(pre) 
          ID i
        CMPD_STMT 
          PRINT_STMT 
            ID i
          PRINT_STMT 
            STRINGIT : 
          PRINT_STMT 
            ID d[]
              ID heap_index[]
                ID i
          PRINT_STMT 
            STRINGIT   
          PRINT_STMT 
            ID pi[]
              ID i
          PRINT_STMT 
            STRINGIT \n
